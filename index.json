[{"content":"Last year, I attempted to become a LinkedIn influencer. This year, I\u0026rsquo;ve decided to become a blogger. This is not my first attempt at a first post or website, there have been a few iterations. But I am committing to this one without restarting again. My goal is to post every week, though I\u0026rsquo;m already failing at that two weeks into the new year.\nI\u0026rsquo;ll focus my content on cool technology and open-source software contributions, however small.\nthe beauty of OSS Developing code (and related content) in the open has a number of benefits including:\npublic, easily discoverable, and easily shareable competitive pressure to product quality work coalescing around common standards dbt Labs calls this contributing to the knowledge loop, and it\u0026rsquo;s certainly not a unique concept. Some other blogger calls this the first magic. I\u0026rsquo;ll call this learning.\nBy developing in the open and leveraging public communities, we can build a better platform for ourselves and future people to build on. This is the beauty of OSS.\ninspiration and aspiration There are clear inspirations. Matthew Rocklin, creator of Dask, recently rethought his website and blog with some interesting points. I found Tim Bray, a creator of XML, has an ongoing blog including posts on Go written before I learned how to code relevant for my own learning. While figuring out how to add the \u0026ldquo;last updated\u0026rdquo; field for this website, I found a retired judge who told me exactly how, on a similar site using the same theme.\nGreat content is out there. Great communities are out there. Over time they are usually gamified and the quality decreases. I\u0026rsquo;ve watched this trend unfold again on LinkedIn, which was and still is a source of useful content posted or amplified by a network of connected professionals \u0026ndash; but is increasingly memes and other noise.\nThis website is my attempt to cut out noise and contribute learnings publicly.\ncomments ","permalink":"https://dkdc.dev/post/im-a-blogger-now/","summary":"I\u0026rsquo;m a blogger now","title":"I'm a blogger now"},{"content":"why? Having a website is cool. Hosting it on a custom domain name is cooler.\nI want to use this website to:\nmotivate myself to learn new things improve my writing (and reading) skills share my thoughts and ideas publicly on interesting technology topics Update: see my first post for more details on why I (re-)created this website.\nwhat? A website! Base requirements:\nallow for N categories of content with templates comments via GitHub dark mode RSS feed how? Source code: https://github.com/lostmygithubaccount/lostmygithubaccount.github.io.\nStatic website defined and built by Hugo using the PaperMod theme. Hosted on GitHub Pages as my user page. CI/CD by GitHub Actions. Custom domain used with a CNAME record. Giscus for comments (embedded via Hugo shortcodes, which are cool).\ncustomization The footer is customized slightly. The general pattern for customizing a theme is copying its layout over into your own layouts/ and modifying them as needed.\nI initially used a shortcode for adding \u0026ldquo;Last updated\u0026rdquo;, but this seemed prone to error. Fortunately I found this post by some random retired judge that showed me a better way! I probably could have figured this out on my own, but I\u0026rsquo;m glad I didn\u0026rsquo;t have to. Little customizations like that can take a lot of time.\nlearnings GitHub pages are still a bit annoying I need to stop restarting from scratch I still really dislike front-end development I\u0026rsquo;m basically back in the same place as my last website attempt with slightly less custom code and slightly faster build times. I do like the theme a bit better and feel like I have a clearer grasp on the overall tech stack and limitations.\nHugo is nice compared to mkdocs and the Python families of static website frameworks and themes. Static vs dynamic can still be a blurry line with clever use of GitHub. Go\u0026rsquo;s templating is interesting for other reasons. You probably still need to write a bit of HTML and JavaScript for anything custom, unfortunately. The Hugo shortcuts make this cleaner.\nIt\u0026rsquo;s incredibly easy to fiddle with front-end elements and GUI considerations for hours without accomplishing anything meaningful.\nI didn\u0026rsquo;t get Hugo modules at first, once I realized they were Go modules (and how that\u0026rsquo;d interact with themes) that made a lot of sense.\nMost of the things I think of and lean toward (re)inventing I come to find out already exist as mature OSS on GitHub. Still, some customization or additional work is needed to fit it to my needs.\nfuture ideas comment-based actions (delete comment, delete thread, post content, etc.) proper categorization automated last-updated-at info search There\u0026rsquo;s a bunch of stuff I could do \u0026ndash; I like having a place I can.\ncomments ","permalink":"https://dkdc.dev/project/website/","summary":"see the footer","title":"website"}]